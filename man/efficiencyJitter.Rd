% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/efficiency_plots.R
\name{efficiencyJitter}
\alias{efficiencyJitter}
\title{Efficiency Scores Jitter Plot}
\usage{
efficiencyJitter(object, scores_EAT, scores_model, upb = NULL, lwb = NULL)
}
\arguments{
\item{object}{An EAT object.}

\item{scores_EAT}{Dataframe with scores (from \code{efficiencyEAT} or \code{efficiencyCEAT}).}

\item{scores_model}{Mathematic programming model of scores_EAT. 
\itemize{
\item{\code{BCC_out}} BCC model. Output orientation.
\item{\code{BCC_in}}  BCC model. Input orientation.
\item{\code{DDF}}     Directional Distance Model.
\item{\code{RSL_out}} Rusell model. Output orientation
\item{\code{RSL_in}}  Rusell model. Input orientation.
\item{\code{WAM}}     Weighted Additive model.
}}

\item{upb}{Numeric. Upper bound for labeling.}

\item{lwb}{Numeric. Lower bound for labeling.}
}
\value{
Jitter plot with DMUs and scores.
}
\description{
This function returns a jitter plot from \code{ggplot2}. This graphic shows how DMUs are grouped into leaf nodes in a model built using the \code{EAT} function. Each leaf node groups DMUs with the same level of resources. The dot and the black line represent, respectively, the mean value and the standard deviation of the scores of its node. Additionally, efficient DMU labels always are displayed based on the model entered in the \code{scores_model} argument. Finally, the user can specify an upper bound \code{upn} and a lower bound \code{lwb} in order to show, in addition, the labels which efficiency score is between them.
}
\examples{

simulated <- eat:::X2Y2.sim(N = 50, border = 0.2)
EAT_model <- EAT(data = simulated, x = c(1,2), y = c(3, 4))

EAT_scores <- efficiencyEAT(data = simulated, x = c(1, 2), y = c(3, 4), object = EAT_model,
                            scores_model = "BCC_out", r = 2, na.rm = TRUE)

efficiencyJitter(object = EAT_model, scores_EAT = EAT_scores, scores_model = "BCC_out")

}
